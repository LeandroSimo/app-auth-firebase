// Mocks generated by Mockito 5.4.6 from annotations
// in app_test/test/src/features/home/presentation/screens/home_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:app_test/src/features/auth/data/domain/entities/user.dart'
    as _i6;
import 'package:app_test/src/features/auth/data/domain/repositories/auth_repository.dart'
    as _i5;
import 'package:app_test/src/features/posts/data/domain/entities/post.dart'
    as _i4;
import 'package:app_test/src/features/posts/data/domain/repositories/post_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [PostRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostRepository extends _i1.Mock implements _i2.PostRepository {
  MockPostRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Post>> getPosts({int? page = 1, int? limit = 10}) =>
      (super.noSuchMethod(
            Invocation.method(#getPosts, [], {#page: page, #limit: limit}),
            returnValue: _i3.Future<List<_i4.Post>>.value(<_i4.Post>[]),
          )
          as _i3.Future<List<_i4.Post>>);

  @override
  _i3.Future<_i4.Post?> getPostById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getPostById, [id]),
            returnValue: _i3.Future<_i4.Post?>.value(),
          )
          as _i3.Future<_i4.Post?>);
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i5.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<_i6.User?> get authStateChanges =>
      (super.noSuchMethod(
            Invocation.getter(#authStateChanges),
            returnValue: _i3.Stream<_i6.User?>.empty(),
          )
          as _i3.Stream<_i6.User?>);

  @override
  _i3.Future<_i6.User?> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmailAndPassword, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i3.Future<_i6.User?>.value(),
          )
          as _i3.Future<_i6.User?>);

  @override
  _i3.Future<_i6.User?> createUserWithEmailAndPassword({
    required String? email,
    required String? password,
    String? displayName,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createUserWithEmailAndPassword, [], {
              #email: email,
              #password: password,
              #displayName: displayName,
            }),
            returnValue: _i3.Future<_i6.User?>.value(),
          )
          as _i3.Future<_i6.User?>);

  @override
  _i3.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i6.User?> getCurrentUser() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentUser, []),
            returnValue: _i3.Future<_i6.User?>.value(),
          )
          as _i3.Future<_i6.User?>);

  @override
  _i3.Future<void> updateUserPhotoURL(String? photoURL) =>
      (super.noSuchMethod(
            Invocation.method(#updateUserPhotoURL, [photoURL]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updateUserDisplayName(String? displayName) =>
      (super.noSuchMethod(
            Invocation.method(#updateUserDisplayName, [displayName]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> reloadUser() =>
      (super.noSuchMethod(
            Invocation.method(#reloadUser, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
